// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// InvoicesColumns holds the columns for the "invoices" table.
	InvoicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "value", Type: field.TypeFloat64},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"Waiting", "Complete"}, Default: "Waiting"},
		{Name: "interval_number", Type: field.TypeInt, Default: 1},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
	}
	// InvoicesTable holds the schema information for the "invoices" table.
	InvoicesTable = &schema.Table{
		Name:       "invoices",
		Columns:    InvoicesColumns,
		PrimaryKey: []*schema.Column{InvoicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "invoices_jobs_invoices",
				Columns:    []*schema.Column{InvoicesColumns[6]},
				RefColumns: []*schema.Column{JobsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// JobsColumns holds the columns for the "jobs" table.
	JobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "rate", Type: field.TypeFloat64},
		{Name: "duration", Type: field.TypeInt},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"Waiting", "Ongoing", "Complete", "Archived"}, Default: "Waiting"},
		{Name: "invoice_interval", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "employer_id", Type: field.TypeUUID},
		{Name: "contractor_id", Type: field.TypeUUID, Nullable: true},
	}
	// JobsTable holds the schema information for the "jobs" table.
	JobsTable = &schema.Table{
		Name:       "jobs",
		Columns:    JobsColumns,
		PrimaryKey: []*schema.Column{JobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "jobs_users_jobsAsEmployer",
				Columns:    []*schema.Column{JobsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "jobs_users_jobsAsContractor",
				Columns:    []*schema.Column{JobsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// JobApplicationColumns holds the columns for the "job_application" table.
	JobApplicationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"Waiting", "Accepted", "Rejected", "Withdrawn"}, Default: "Waiting"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
		{Name: "contractor_id", Type: field.TypeUUID},
	}
	// JobApplicationTable holds the schema information for the "job_application" table.
	JobApplicationTable = &schema.Table{
		Name:       "job_application",
		Columns:    JobApplicationColumns,
		PrimaryKey: []*schema.Column{JobApplicationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_application_jobs_applications",
				Columns:    []*schema.Column{JobApplicationColumns[4]},
				RefColumns: []*schema.Column{JobsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "job_application_users_applicationsAsContractor",
				Columns:    []*schema.Column{JobApplicationColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password_hash", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		InvoicesTable,
		JobsTable,
		JobApplicationTable,
		UsersTable,
	}
)

func init() {
	InvoicesTable.ForeignKeys[0].RefTable = JobsTable
	JobsTable.ForeignKeys[0].RefTable = UsersTable
	JobsTable.ForeignKeys[1].RefTable = UsersTable
	JobApplicationTable.ForeignKeys[0].RefTable = JobsTable
	JobApplicationTable.ForeignKeys[1].RefTable = UsersTable
	JobApplicationTable.Annotation = &entsql.Annotation{
		Table: "job_application",
	}
}
